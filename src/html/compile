#!/usr/bin/env node

var sys = require('sys'),
    http = require('http'),
    fs = require('fs'),
    querystring = require('querystring'),
    path = require('path'),
    spawn = require('child_process').spawn;

var FILE_TO_COMPILE = "src/Main.js";

var code = injectScripts(FILE_TO_COMPILE);

var outputFilename = path.join(__dirname, "dist/SGF.debug.js");

sys.puts('Saving debug code to "'+outputFilename+'"');
fs.writeFileSync(outputFilename, code);
//process.exit();


var request = http.createClient(80, 'closure-compiler.appspot.com').request('POST', '/compile', {
    'Host': 'closure-compiler.appspot.com',
    'Content-Type': 'application/x-www-form-urlencoded'
});

sys.print("Sending \""+FILE_TO_COMPILE+"\" to Google Closure Compiler");
var printDots = new PrintDots(30);

request.write(querystring.stringify({
    'compilation_level': 'ADVANCED_OPTIMIZATIONS',
    'output_format': 'json',
    'output_info': ['compiled_code', 'warnings', 'errors', 'statistics'],
    'formatting': 'pretty_print',
    'js_externs': 'swfobject.embedSWF=function(){};',
    'js_code': code
}, '&', '=', false));



request.addListener('response', function (response) {
    var res = "";
    response.setEncoding('utf8');
    response.addListener('data', function (chunk) {
        sys.print('.');
        res += chunk;
    });
    response.addListener('end', function () {
        printDots.stop();
        sys.puts(' done!');
        //sys.puts(res);
        var json = JSON.parse(res);
        var compiledCode = json.compiledCode;
        delete json.compiledCode;
        sys.puts(sys.inspect(json));
        
        outputFilename = path.join(__dirname, "dist/SGF.js");
        sys.puts('Saving compiled code to "'+outputFilename+'"');
        fs.writeFileSync(outputFilename, compiledCode);
    });
});

request.end();


function PrintDots(interval) {
    var num = setInterval(function() {
        sys.print('.');
    }, interval);
    this.stop = function() {
        clearInterval(num);
    }
}

function injectScripts(main) {
    var currentDir = path.join(main, "..");
    return fs.readFileSync(main, 'utf8').replace(/\/\/{[^{}]+}/g, function(key){
        var val = path.join(currentDir, key.replace(/[{}]+/g, "").substring(2));
        sys.puts("Injecting \""+ val +"\"");
        return injectScripts(val);
    });
}
