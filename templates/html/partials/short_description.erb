<li class="method-description">
  <h4 id="<%= dom_id(object) %>"><%= object.name %>
    <span class="method-permalink"><a href="<%= path_to(object) %>">#</a></span></h4>

  <% if object.signature %>
    <%= method_synopsis(object) %>
  <% end %>
  
  <% if object.is_a?(Documentation::Method) %>
    <% unless object.arguments.empty? %>
      <ul class="argument-list">
        <% object.arguments.each do |arg| %>
          <li>
            <code><%= arg.name %></code>
            <% unless arg.types.empty? %>
              (<%= arg.types.map { |t| auto_link_code(t, false) }.join(' | ') %>)
            <% end %>
            <%= ' &ndash; ' + inline_htmlize(arg.description) unless arg.description.empty? %>
          </li>
        <% end %>
      </ul> <!-- .argument-list -->
    <% end %>
  <% end %>
  
	<%= htmlize(object.description) %>
  
  <% # Does it have an alias? %>
  <% unless object.aliases.empty? %>
    <p class="alias aliases">Aliased as: <%= object.aliases.map { |a| auto_link_code(a, false) }.join(', ') %></p>
  <% end %>
  
  <% # Is it an alias of something else? %>
  <% if object.alias? %>
    <p class="alias alias-of">Alias of: <%= auto_link_code(object.alias_of, false) %></p>
  <% end %>
  
  <% # Is it related to something? %>
  <% if object.is_a?(Documentation::Utility) && object.related_to %>
    <p class="related-to">Related to: 
      <%= auto_link_code(object.related_to, false) %></p>      
  <% end %>
    
  <% # Is it methodized? %>
  <% if object.is_a?(Documentation::Method) && object.methodized? %>
    <p class="note">This method can be called <em>either</em> as an instance method <em>or</em> as a generic method. If calling as a generic, pass the instance in as the first argument.</p>
  <% end %>
  
</li>
